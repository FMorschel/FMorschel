name: "Generate Commit Badge"
description: "Generate a Shields.io badge for commit count in a specified repository."
inputs:
  repository:
    description: "The GitHub repository (user/project) to query commits from."
    required: true
  author:
    description: "The author whose commits should be counted."
    required: true
  text:
    description: "The label text for the badge."
    required: true
  logo:
    description: "The logo to include in the badge (optional)."
    required: false
    default: "github"
  labelColor:
    description: "The background color for the badge label."
    required: false
    default: "#0175C2" # Default to Dart's blue
  color:
    description: "The background color for the badge value."
    required: false
    default: "lightgray"
  outputPath:
    description: "Path and file name for the generated badge (e.g., 'badges/dart-commits.svg')."
    required: true

runs:
  using: "composite"
  steps:
    - name: Count Commits
      id: count-commits
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        REPO="${{ inputs.repository }}"
        AUTHOR="${{ inputs.author }}"
        API_URL="https://api.github.com/repos/${REPO}/commits?author=${AUTHOR}&per_page=100"
        PAGE=1
        COUNT=0

        while true; do
          RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "${API_URL}&page=${PAGE}")
          LENGTH=$(echo "$RESPONSE" | jq length)
          if [ "$LENGTH" -eq 0 ]; then
            break
          fi
          COUNT=$((COUNT + LENGTH))
          PAGE=$((PAGE + 1))
        done

        echo "commit_count=$COUNT" >> $GITHUB_ENV

    - name: Generate Badge
      shell: bash
      run: |
        COMMIT_COUNT=${{ env.commit_count }}
        TEXT="${{ inputs.text }}"
        LOGO="${{ inputs.logo }}"
        LABEL_COLOR="${{ inputs.labelColor }}"
        COLOR="${{ inputs.color }}"
        BADGE_URL="https://img.shields.io/static/v1?label=${TEXT}&message=${COMMIT_COUNT}&color=${COLOR}&labelColor=${LABEL_COLOR}&style=flat&logo=${LOGO}"
        curl -s "$BADGE_URL" -o badge.svg

    - name: Save Badge
      shell: bash
      run: |
        mkdir -p $(dirname "${{ inputs.outputPath }}")
        mv badge.svg "${{ inputs.outputPath }}"
